Exercises on Design Patterns II

Q1

a) Different but related behaviours are each given a concrete class which implement the same interface. By
encapsulating the interface within a client, that client can use any of the available behaviours.

b) It is appropriate to use the strategy pattern whenever i unknown until runtime.


Q3

The abstract factory method should be used when you wish to separate the client from concrete types. It
allows for new concrete types to be introduced without rewriting the client code because client depend only
abstract types.


Q5


Q9

a) The facade pattern uses a wrapper class which encapsulates one of more classes within it. The intention is 
to hide the complexity within inner classes from a client. The wrapper class provides a simplified 
interface for performing the same behaviour as inner classes.

b) The facade pattern can be used to achieve the following aims: reduce dependencies on methods used within inner 
classes; increase code readability; make complex easier to use.